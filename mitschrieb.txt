Aufgabenstellung:

* Gruppe von maximal fünf Leute, Anwendungsfall raussuche oder sich geben lassen (z.B. Beziehungsgeflechte Game of Thrones und voraussagen, wer als Nächstes stirbt) und vorstellen
* Datenauswertung mit Datensets oder Streamdaten (Twitter)
* Passende Technologie wählen für Thema
* 






Kurzeinleitung Docker:

Allgemeines:

* Virtualisierungsplattform auf Container-Ebene
* Bei Deinstallation kann ganze Umgebung wieder gelöscht werden, ohne Rückstände
* Beispielsweise ist Word-Applikation mit allen Bibliotheken installierbar über Container
* Leicht deploybar, Entwicklungsumgebung kann einfach in Produktion gesetzt werden

Bedienung:
* Infrastrukturen können einfach aufgebaut werden (über Dockerhub, z.B. interne Memory-Datenbank Cassandra) suchen und dann über Kommandozeile z.B. docker pull cassandra
* Dann starten mit docker run …
* docker images zeigt alle images an
* node-red Flow Entwicklung für nodejs
* docker start -p 8080 -name …
* z.B.: Twitter reinziehen, authentifizieren, konfigurieren, welche Tweets (nach #) man haben will
* Debug Feld oben rein, deploy, nachrichten kommen rein
* sentinent Feld für sentinent Analyse dazu, verbinden, debug feld weg (message.sentinel.score) eintragen - analysiert, ob Tweet (mit payload) positiv oder negativ war
* node red neue Pakete installieren - z.B. MongoDb um Ergebnisse in Datenbank zu speichern als JSON
* auch REST Schnittstellen SQL im Web abfragen
* docker rm node (Deinstallation), docker stop node (Stoppen)


Elastic Search:

* Datenmengen analysieren und graphisch durch sentinent Analyse
* Auch auf Dockerhub verfügbar
* Mit Jupyter Notebook gleichzeitig dokumentieren und coden
* z.B. Historiendaten und Regressionsanalyse, sentinel Analyse gegen Twitter-Feeds laufen lassen und Prognosen erstellen
* Verkehrsdaten analysieren
* Datenbestände über kaggle.com

Neo4j - Graphdatenbank für z.B. Verbindungen wie Netzwerke 
in-memory Datenbank z.B. Cassandra
Elastic Search für Big Data Angelegenheiten
Mongo DB für JSON-Objekte, wenig. typisiert, freier als XML, aber fehleranfälliger

In Gruppen Technologie und Datenbestände raussuchen und am Ende Kommilitonen Anwendungsfall vorstellen

Complex Event Processing
Esper CEP Engine
SQL-ähnliche Syntax auf Streambasis
Google Tendorflow



Ideen:


Crimes in Chicago
Traffic auswerten und vergleichen, wenn kostenloser Nahverkehr umgesetzt würde
Wenn viel Stau ist, kommen dann mehr negative Tweets rein (USA)
Unfälle auswerten und Vergleich mit autonomen Fahrzeugen
Student Alcohol consumption
Pestizidebenutzung in Korrelation mit Anstieg der Weltbevölkerung